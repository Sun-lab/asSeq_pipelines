
R version 4.0.3 (2020-10-10) -- "Bunny-Wunnies Freak Out"
Copyright (C) 2020 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin17.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> # just run the simulation example. 
> 
> source("gwas_enrich.R")
Loading required package: lme4
Loading required package: Matrix
Loading required package: coda
Loading required package: MASS
> library(data.table)
> library(ggplot2)
> library(doParallel)
Loading required package: foreach
Loading required package: iterators
Loading required package: parallel
> library(foreach)
> library(doRNG)
Loading required package: rngtools
> 
> nCore = 11      # number of cores for multi-core computation
> registerDoParallel(cores=nCore)
> 
> options(mc.cores=nCore)
> 
> source_dir = "~/research/GTEx/eQTL_Zhabotynsky_2021/gwas_enrich"
> work_dir   = "."
> 
> enrich_files = list.files(source_dir)
> tissues = gsub(".tsv.gz", "", enrich_files)
> 
> gwas = get_GWAS_catalog(work_dir = work_dir)
> tab = table(gwas$myPHENO); tab

                 Aging         Anthropometric                  Blood 
                  3010                  35297                  72639 
       Cardiometabolic              Circadian                  Colon 
                 37349                    722                   1099 
             Digestion       Education_wealth              Endocrine 
                  1422                   8002                   1044 
                  Eyes    Female_reproduction                 Immune 
                  4441                   2331                   9734 
        Kidney_urinary                  Liver             Morphology 
                  4315                    727                   1460 
           Mouth_teeth Psychiatric_neurologic            Respiratory 
                  1140                  28847                  14637 
              Skeletal                   Skin    substance_addiction 
                  8490                   2470                   2266 
> length(tab)
[1] 21
> 
> if(file.exists("gwas_enrich_28_tissues.txt")){
+   res_all = fread("gwas_enrich_28_tissues.txt")
+ }else{
+   res_all = NULL
+   
+   for(i in 1:length(tissues)){
+     
+     cat("\n------------------------------------------------------\n")
+     cat(i, date(), tissues[i])
+     cat("\n------------------------------------------------------\n")
+     
+     dat = fread(file.path(source_dir, enrich_files[i]), data.table=FALSE)
+     
+     names(dat)[which(names(dat) == "Pos")] = "POS"
+     dim(dat)
+     dat[1:2,]
+     
+     dat$Chr = paste0("chr", dat$Chr)
+     
+     # Run enrichment analyses for all phenotypes
+     res0 = run_gwasEnrich_analysis(DATA = dat, work_dir = work_dir,
+                                    which_gwas = "gwas_catalog", nBLOCKS = 200, 
+                                    verbose = FALSE)
+     
+     res = foreach(wGWAS = names(tab), .combine = "rbind") %dopar% {
+       res1 = run_gwasEnrich_analysis(DATA = dat, work_dir = work_dir,
+                                      which_gwas = wGWAS, nBLOCKS = 200,
+                                      verbose = FALSE)
+       res1
+     }
+     
+     dim(res)
+     res[1:2,]
+     
+     res = rbind(res0, res)
+     
+     names(res)[2] = "MODEL"
+     
+     res$GROUP = tissues[i]
+     res_all = rbind(res_all, res)
+   }
+   fwrite(res_all, "gwas_enrich_28_tissues.txt", sep="\t")
+ }
> 
> dim(res_all)
[1] 1232   14
> res_all[1:2,]
          wGWAS   MODEL  n_test  n_eqtl n_gwas n_gwas_eqtl frac_gwas  frac_all
1: gwas_catalog TReCASE 5543903 1210726 118568       41897 0.3533584 0.2183887
2: gwas_catalog     OLS 5543903  887978 118568       32336 0.2727211 0.1601720
     enrich log_enrich log_enrich_meanJK log_enrich_lowJK log_enrich_highJK
1: 1.618025  0.4812062         0.4825851        0.4319059         0.5332643
2: 1.702677  0.5322016         0.5342283        0.4694428         0.5990138
                  GROUP
1: Adipose_Subcutaneous
2: Adipose_Subcutaneous
> 
> table(table(res_all$GROUP))

44 
28 
> res_all$GROUP = substr(res_all$GROUP, 1, 20)
> table(table(res_all$GROUP))

44 
28 
> tissues = substr(tissues, 1, 20)
> # Plot
> 
> res_all$tmp_col = ifelse(res_all$log_enrich_lowJK > 0, 
+                          "Significant", "Non-significant")
> res_all$wGWAS = as.character(res_all$wGWAS)
> lev_wGWAS = sort(unique(res_all$wGWAS)); # lev_wGWAS
> lev_wGWAS = c("gwas_catalog",lev_wGWAS[lev_wGWAS != "gwas_catalog"])
> lev_wGWAS = rev(lev_wGWAS)
> res_all$wGWAS = factor(res_all$wGWAS,levels = lev_wGWAS)
> 
> pd = position_dodge(width = 0.75) # control point spread
> themes = theme(text = element_text(size = 24),
+                panel.background = element_blank(),
+                panel.spacing = unit(0.5,"lines"),
+                panel.border = element_rect(color = "black",fill = NA,size = 1),
+                legend.position = c("none","bottom")[2],
+                legend.text = element_text(size = 26))
> 
> for(k in 1:7){
+   
+   res = res_all[res_all$GROUP %in% tissues[(4*(k-1)+1):(4*k)],]
+   
+   tmp_range = max(abs(res$log_enrich_meanJK)); tmp_range
+   tmp_range = 1.2 * c(-1,1) * ifelse(tmp_range >= 1,tmp_range,1); tmp_range
+   
+   gg = ggplot(data = res,aes(x = wGWAS,y = log_enrich_meanJK,
+                              ymin = log_enrich_lowJK,
+                              ymax = log_enrich_highJK,
+                              group = MODEL)) +
+     geom_errorbar(position = pd, size = 1 ,width = 0.1, aes(color = MODEL)) +
+     geom_point(position = pd, size = 5,
+                aes(shape = tmp_col, color = MODEL, stroke = c(2,1.5)[2])) + 
+     geom_point(data = res, position = pd, 
+                mapping = aes(x = wGWAS,y = log_enrich, group = MODEL)) +
+     facet_grid(~ GROUP) + labs(shape = "Inference", color = "Method") +
+     scale_shape_manual(values = c(1,19)) +
+     geom_hline(yintercept = 0,linetype = 2) +
+     ylab("log(Enrichment)") + xlab("") +
+     coord_flip(ylim = tmp_range) + themes + 
+     guides(color = guide_legend(override.aes = list(size = 5)),
+            shape = guide_legend(override.aes = list(size = 5)))
+   
+   fn = file.path(work_dir, sprintf("enrich_trecase_vs_ols_f%d.pdf", k))
+   ggsave(filename = fn, plot = gg, width = 15, height = 10, units = "in")
+ }
> 
> 
> gc()
           used  (Mb) gc trigger  (Mb) limit (Mb) max used  (Mb)
Ncells  2779567 148.5    4884878 260.9         NA  4884878 260.9
Vcells 12307084  93.9   20506526 156.5      32768 16105715 122.9
> 
> sessionInfo()
R version 4.0.3 (2020-10-10)
Platform: x86_64-apple-darwin17.0 (64-bit)
Running under: macOS Big Sur 10.16

Matrix products: default
BLAS:   /Library/Frameworks/R.framework/Versions/4.0/Resources/lib/libRblas.dylib
LAPACK: /Library/Frameworks/R.framework/Versions/4.0/Resources/lib/libRlapack.dylib

locale:
[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8

attached base packages:
[1] parallel  stats     graphics  grDevices utils     datasets  methods  
[8] base     

other attached packages:
 [1] doRNG_1.8.2       rngtools_1.5      doParallel_1.0.16 iterators_1.0.13 
 [5] foreach_1.5.1     ggplot2_3.3.3     data.table_1.13.6 HelpersMG_4.5    
 [9] MASS_7.3-53       coda_0.19-4       lme4_1.1-26       Matrix_1.3-0     

loaded via a namespace (and not attached):
 [1] Rcpp_1.0.5       pillar_1.4.7     compiler_4.0.3   nloptr_1.2.2.2  
 [5] tools_4.0.3      digest_0.6.27    boot_1.3-25      statmod_1.4.35  
 [9] lifecycle_0.2.0  tibble_3.0.4     nlme_3.1-151     gtable_0.3.0    
[13] lattice_0.20-41  pkgconfig_2.0.3  rlang_0.4.10     withr_2.3.0     
[17] dplyr_1.0.2      generics_0.1.0   vctrs_0.3.6      grid_4.0.3      
[21] tidyselect_1.1.0 glue_1.4.2       R6_2.5.0         minqa_1.2.4     
[25] farver_2.0.3     purrr_0.3.4      magrittr_2.0.1   scales_1.1.1    
[29] codetools_0.2-18 ellipsis_0.3.1   splines_4.0.3    colorspace_2.0-0
[33] labeling_0.4.2   munsell_0.5.0    crayon_1.3.4    
> q(save="no")
> proc.time()
   user  system elapsed 
  7.593   0.291   8.062 
